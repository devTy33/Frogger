Feb. 23 - Team meeting just to discuss basic project ideas. (~1 hour)

Mar. 23 - Team meeting to finalize project ideas (unity game) (~1 hour)

Apr. 4 - Team meeting to finalize what weâ€™re making with unity. Decided on arcade-style so we could each work on separate small games. (~1 hour)
Apr. 18 - Team met to work on the presentation and talk about the project update. (~1 hour)
Apr. 21 - Watched tutorials on the setup of a basic 2d platform game and writing scripts for collision and movement. (2 hours).

Apr. 24 - Watched unity tutorials and built the first part of my Frogger game (placing assets and getting the scene to look right) (~ 2 hours)

Apr. 25 - Watched Unity tutorials and wrote C# scripts for frog and objects including collisions and object movement (~ 3 hours).

Apr. 27 - Watched tutorials / did research on making our games playable online (~ 1 hour)

May 1.  - Finished up basic functions of Frogger game (Respawn, lives, time). Made UI screens for both death and game completion. Made 
buttons corresponding to each screen. Tried to implement a leaderboard that would work without games being playable from the internet. 
Made Leaderboard UI that would appear once the game was beaten. To set up a web server for the leaderboard, I tried using danqzq.itch.io 
which is a free web server creator specifically for leaderboards. I tried this a used multiple tutorials but I kept on getting errors. 
Eventually, I was spending too much time trying to fix the leaderboard so my team and I decided to scrap the Idea. (~8 hours)

May 2. -  Added UI for elapsed time and lives at the top of the game screen. Met with the team and we decided to officially scrap the 
leaderboard idea. (~2 hours)

May 7. -  Team meeting to figure out how we would merge each of our games to make it arcade-style. We all pushed out scene files onto the 
GitHub. After many attempts of trying to get the scenes to work together on 1 machine, we decided to each individually post out games on 
the internet without combining them. (~3 hours)

May 8. - Finished up final UI details and buttons. Tried to get my project to run properly with OpenGL. I made my project with
a custom aspect ratio and OpenGL uses a standardized aspect ration, so when I build my project with OpenGL the proportions are
completely off. I got it to look normal running on normal OpenGL, but when I try to post it to unity's website, the width is 
completely different causing the loops of the logs and the turtles to be ruined. Overall, I had a lot of trouble converting 
what I had in my unity to look the same on OpenGL. (~4 hours)


Run Instructions:
-To run what I have published with openGL you can go to the link: https://play.unity.com/mg/other/302-final_proj
-It works best when run in unity developer environment. You can open the 'Frogger' folder in unity and run the game there
-Use the arrow Keys to play
-You get 3 lives and you want to make it to all 5 home

Issues:
1. We thought we would be able to combine our scenes to create an arcade style UI to play them all in one place.
After several attempts we realized that this was no reasonable, and that we should've built it all in the same unity project.
2. Building a leaderboard was more challenging than I thought. You need a webserver in order to have a leaderboard that would work
with having the game playable online. I used a leaderboard webserver package meant for unity games, but I ran into all sorts of errors.
3. Aspect ratios and Resolution. I built my game with custom aspect ration and resolution. I didn't realize that these don't translate 
over when publishing with OpenGL. I figured out how to set the same resolution; However, there is no way to customize OpenGL aspect
ratio. This makes the proportions of my online game not work (the log and turtle paths got stretched out).
